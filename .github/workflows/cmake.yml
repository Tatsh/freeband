name: C/C++ CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: install deps
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install -y freeglut3-dev libsdl-ttf2.0-dev libsdl1.2-dev libsndfile1-dev portaudio19-dev sdl-image1.2-dev
      - run: |
          cmake -S . -B build -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix
          cmake --build build --config ${{matrix.build-type}} --verbose
          cmake --install ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - name: install deps
  #       run: brew install freeglut libsndfile portaudio sdl12-compat sdl2_image sdl2_ttf
  #     - run: |
  #         cmake -S . -B build -DCMAKE_VERBOSE_MAKEFILE=ON \
  #           -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
  #           -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/prefix
  #         cmake --build build --config ${{matrix.build-type}} --verbose
  #         cmake --install ${{github.workspace}}/build --config ${{matrix.build-type}} --verbose
  #     - name: Package
  #       run: >-
  #         cpack -C ${{matrix.build-type}}
  #         --config ${{github.workspace}}/build/CPackConfig.cmake --verbose
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       build-type: [Debug, Release]
  # build-msys:
  #   runs-on: windows-latest
  #   steps:
  #     - id: fixed_workspace
  #       name: Fix path
  #       run: >-
  #         echo out=$("${{github.workspace}}" -Replace "\\","/") | Out-File
  #         -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         install: >-
  #           make
  #         msystem: ${{matrix.sys.name}}
  #         pacboy: >-
  #           SDL_image:p
  #           SDL_ttf:p
  #           cmake:p
  #           freeglut:p
  #           libsndfile:p
  #           ninja:p
  #           portaudio:p
  #           sdl12-compat:p
  #           toolchain:p
  #         update: true
  #     - uses: actions/checkout@v5
  #       with:
  #         fetch-depth: 0
  #     - name: Configure
  #       run: >-
  #         cmake -G Ninja -B ${{steps.fixed_workspace.outputs.out}}/build
  #         --install-prefix ${{steps.fixed_workspace.outputs.out}}/build/prefix
  #         -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
  #         -DCMAKE_PREFIX_PATH=${{steps.fixed_workspace.outputs.out}}/build/prefix
  #       shell: msys2 {0}
  #     - name: Build
  #       run: cmake --build ${{steps.fixed_workspace.outputs.out}}/build --verbose
  #       shell: msys2 {0}
  #     - name: Install
  #       run: >-
  #         cmake --install ${{steps.fixed_workspace.outputs.out}}/build
  #         --config ${{matrix.build-type}} --verbose
  #       shell: msys2 {0}
  #     - name: Package
  #       run: >-
  #         cpack -C ${{matrix.build-type}}
  #         --config ${{steps.fixed_workspace.outputs.out}}/build/CPackConfig.cmake --verbose
  #       shell: msys2 {0}
  #     - name: Get Latest Tag
  #       id: latest_tag
  #       uses: WyriHaximus/github-action-get-previous-tag@v1
  #     - if: ${{matrix.sys.name == 'ucrt64'}}
  #       name: Upload package
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         files: |
  #           ${{github.workspace}}/freeband*.zip
  #         tag_name: ${{ steps.latest_tag.outputs.tag }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       build-type: [Debug, Release]
  #       sys:
  #         - env: i686
  #           name: mingw32
  #         - env: x86_64
  #           name: mingw64
  #         - env: ucrt-x86_64
  #           name: ucrt64
