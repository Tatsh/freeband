#include "../freeband.h"
#include "../graphics/graphics.h"
#include "main.h"
#include "songs.h"

/* Order of corners: top-left, bottom-left, bottom-right, top-right */
GLfloat text_songsX[] = { 0.0f, 0.0f, 0.8f, 0.8f };
GLfloat text_songsY[] = { 0.0f, 0.318f, 0.318f, 0.0f };
GLfloat text_byTierX[] = { 0.0f, 0.0, 0.417f, 0.417f };
GLfloat text_byTierY[] = { 0.0f, 0.2f, 0.2, 0.0f };

GLuint bg;
GLuint text_songs, text_byTier, text_titleAZ, text_artistAZ, text_byBPM;

/* In the case of the songs screen, any character is possible; will be replaced with ? if there is no such texture */

GLvoid screenSongsBuffer() {
  
  if ( (bg = loadTexture(bgTexture, 0)) == -1)
    fprintf(stderr, "Unable to load texture: %s.\n", bgTexture);
  
  getFont(crilleei);
  text_songs = loadText("SONGS", crillee, white, 0);
  if (bitstream)
    TTF_CloseFont(crillee);

  getFont(freeSansi);
  text_byTier = loadText("by tier", freeSans, white, 1);
  text_titleAZ = loadText("title A-Z", freeSans, white, 2);
  text_artistAZ = loadText("artist A-Z", freeSans, white, 3);
  text_byBPM = loadText("by BPM", freeSans, white, 4);
  if (freeSans)
    TTF_CloseFont(freeSans);
  
  return;
}

GLvoid screenSongs() {
  
  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
  glBindTexture( GL_TEXTURE_2D, bg );
  positionTexture(fillBGVertexX, fillBGVertexY, defVertexZ);
  
  glPushMatrix();
  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
  glTranslatef(-0.4f, -1.05f, 0.0f);
  glBindTexture( GL_TEXTURE_2D, text_songs );
  positionTexture(text_songsX, text_songsY, defVertexZ);
  glPopMatrix();
  
  glPushMatrix();
  glColor4f(colour_blue_7CA4F6[0], colour_blue_7CA4F6[1], colour_blue_7CA4F6[2], 1.0f);
  glBindTexture( GL_TEXTURE_2D, text_byTier );
  positionTexture(text_byTierX, text_byTierY, defVertexZ);
  glPopMatrix();
  
  return;
}
